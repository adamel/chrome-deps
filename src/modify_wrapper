#! /bin/bash
# @MODIFY_WRAPPER@ @WRAPPER_MOD_VERSION@ (C) Richard K. Lloyd 2013 <rklloyd@gmail.com>
# Created by @SCRIPTNAME@ and included in the @DEPS_NAME@ RPM
# to modify @CHROME_DEFAULTS@ in the following ways:
# - Remove any existing setting of repo_add_once
# - Updates (or adds) a custom ### START .. ### END section, which will
#   add an LD_PRELOAD definition to google-chrome if one isn't present.
# - Sets repo_add_once to true (picked up by /etc/cron.daily/google-chrome)
# @MODIFY_WRAPPER@ is run once at the end of the @DEPS_NAME@ RPM installation.

chrome_defaults="@CHROME_DEFAULTS@"
progname="`basename $0`"

error()
{
   echo "$progname: ERROR: $1 - aborted" >&2
   exit 1
}

# Create defaults file if it doesn't exist
touch "$chrome_defaults"
if [ ! -f "$chrome_defaults" ]
then
   error "Can't create $chrome_defaults"
fi

update_file()
# $1 = File to update with contents of stdin
{
   nfile="$1.new" ; ofile="$1.old"
   cat >"$nfile"
   if [ ! -f "$nfile" ]
   then
      rm -f "$nfile"
      error "Failed to create temporary update file $nfile"
   fi

   # Don't do update if new file is the same as old one
   if [ "`diff \"$1\" \"$nfile\"`" = "" ]
   then
      rm -f "$nfile"
      return
   fi

   mv -f "$1" "$ofile"
   if [ ! -f "$ofile" ]
   then
      error "Failed to create temporary backup of $1"
   fi

   mv -f "$nfile" "$1"
   rm -f "$nfile"
   if [ ! -f "$1" ]
   then
      mv -f "$ofile" "$1"
      chmod a+r "$1"
      error "Failed to update $1"
   fi

   chmod a+r "$1"
   rm -f "$ofile"
}

grep -v repo_add_once= "$chrome_defaults" | awk '
BEGIN { wrapper_mod=0; exclude_mod=0; end_of_mod=0; }
{
   if ($4==scriptname)
   {
      if ($2=="START")
      {
         if ($3==wrapper_mod_version)
         {
            wrapper_mod=1; exclude_mod=0;
         }
         else exclude_mod=1;
      }
      else
      if ($2=="END") end_of_mod=1;
   }

   if (!exclude_mod) printf("%s\n",$0);

   if (end_of_mod) { exclude_mod=0; end_of_mod=0; }
}
END {
   if (!wrapper_mod)
   {
      printf("### START %s %s modifications\n",
             wrapper_mod_version,scriptname);
      printf("old_line=\"export LD_LIBRARY_PATH\"\n");
      printf("new_line=\"$old_line LD_PRELOAD=\\\"%s\\\"\"\n",unsetlib);
      printf("chrome_wrapper=\"%s\"\n",chrome_wrapper);
      printf("if [ -s \"$chrome_wrapper\" ]\n");
      printf("then\n");
      printf("   if [ \"`grep \\\"$new_line\\\" \\\"$chrome_wrapper\\\"`\" = \"\" ]\n");
      printf("   then\n");
      printf("      new_wrapper=\"$chrome_wrapper.new\"\n");
      printf("      sed -e \"s#$old_line#$new_line#g\" <\"$chrome_wrapper\" >\"$new_wrapper\"\n");
      printf("      if [ -s \"$new_wrapper\" ]\n");
      printf("      then\n");
      printf("         mv -f \"$new_wrapper\" \"$chrome_wrapper\"\n");
      printf("         chmod a+rx \"$chrome_wrapper\"\n");
      printf("      fi\n");
      printf("   fi\n");
      printf("fi\n");
      printf("### END %s %s modifications\n",
             wrapper_mod_version,scriptname);
   }
   printf("repo_add_once=\"true\"\n");
}' wrapper_mod_version="@WRAPPER_MOD_VERSION@" scriptname="@SCRIPTNAME@" unsetlib="@UNSETLIB@" chrome_wrapper="@CHROME_WRAPPER@" |
update_file "$chrome_defaults"

# Now actually run the defaults file (it will be run daily via cron or
# when the google-chrome-stable RPM is installed or updated),
# so that google-chrome is updated if it needs to be
if [ -s "$chrome_defaults" ]
then
   . "$chrome_defaults"
fi

exit 0
